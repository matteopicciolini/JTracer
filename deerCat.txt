# Deer, Cat and Wolf

# This is a tutorial for our programs using TriangleMesh.

# Set the materials
# 1 light source
# others are diffusive
# spaces are not relevant,

material cat_mat   (diffuse(uniform(<darkOrange>)),   uniform(<black>))
material deer_mat (diffuse(uniform(<brown>)), uniform(<black>))
material white_mat (diffuse(uniform(<white>)), uniform(<black>))
material yell (diffuse(uniform(<yellow>)), uniform(<black>))

material stars(diffuse(image("stars")), uniform(<black>))
material gold (specular(uniform(<gold>)), uniform(<black>))
material silver (specular(uniform(<silver>)), uniform(<black>))
material bronze (specular(uniform(<darkBrown>)), uniform(<black>))

material check (diffuse(checkered(<white>, <pink>, 4)), uniform(<black>))

# Light Source. The correct syntax of this element consists in calling the
# exact type of the material and light you want to reproduce

material sky_mat (diffuse(image("stars")), uniform(<black>))
material moon_mat (diffuse(image("Moon")), uniform(<0.5, 0.5, 0.5>))

# The coloured lateral walls are planes
# The syntax for the plane consists in the material and transformation (translation, rotation and scaling,
# generated by the vector written between [])

plane (check,
       translation([0 , 0 , 0])
       )

# The light
# The syntax for the sphere is similar, you have to specify the material and the transformation

sphere(
	sky_mat,
	scaling([5, 5, 5])
	)
sphere(
    moon_mat,
    translation([3, 1, 3]) * scaling([1, 1, 1])
    )

# Deer
# Let's implement TriangleMeshes! First of all tou have to pass the material, the transformation as the other shapes,
# and after that there's the need to pass the name of file .txt without the extension (cause of the limitations
# of our compiler)

fileshape(
          deer_mat,
          scaling([1.4, 1.4, 1.4]) * rotationX(90) * translation([1.4, 1.2, 0]) * rotationY(180),
          deer
)

#cat
fileshape(
          cat_mat,
          scaling([0.6, 0.3, 0.3]) * rotationX(90) * translation([3, 1.9, -3.6]) * rotationY(180),
          cat
)

fileshape(
          white_mat,
          rotationX(90) * translation([1.57, 0.65, 1.2]) * rotationY(180) * scaling([0.8, 0.8, 0.4]),
          wolf
)

#wolf
box (
	[-0.5,-0.55, 0.0],
    [0.5, 0.5, 0.7],
	bronze,
	translation([1.5 , -1.05 , -0.4])
	)

#deer
box (
	[-0.5,-0.55, 0.0],
    [0.5, 0.55, 1.0],
	gold,
	translation([1.5 , -0.0 , -0.0])
	)

	#cat
box (
    [-0.5,-0.5, 0.0],
    [0.5, 0.5, 0.6],
    silver,
    translation([1.5 , 1.0 , 0])
    )


# Set the camera
# Once you have set al the shapes, you have to specify the type of the projection (orthogonal or perspective)
# and the transformation of the camera
camera(perspective, translation([0, 0, 1]), 1.0, 1.0)